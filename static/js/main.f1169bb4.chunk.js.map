{"version":3,"sources":["main/ui/common/SuperInputText/SuperInputText.module.css","main/ui/common/SuperButton/SuperButton.module.css","main/ui/common/SuperCheckbox/SuperCheckbox.module.css","main/ui/common/SuperEditableSpan/SuperEditableSpan.module.css","main/ui/common/SuperRadio/SuperRadio.module.css","main/ui/common/SuperRange/SuperRange.module.css","main/ui/common/SuperSelect/SuperSelect.module.css","main/ui/Routes/Routes.tsx","reportWebVitals.ts","main/ui/Error404/Error404.tsx","main/ui/Registration/Registration.tsx","main/ui/Profile/Profile.tsx","main/ui/common/SuperInputText/SuperInputText.tsx","main/ui/common/SuperButton/SuperButton.tsx","main/dal/password-api/passwordAPI.ts","main/bll/resetPasswordReducer.ts","main/ui/ResetPassword/ResetPassword.tsx","main/bll/createNewPasswordReducer.ts","main/ui/CreateNewPassword/CreateNewPassword.tsx","main/ui/common/SuperCheckbox/SuperCheckbox.tsx","main/ui/common/SuperEditableSpan/SuperEditableSpan.tsx","main/ui/common/SuperRadio/SuperRadio.tsx","main/ui/common/SuperRange/SuperRange.tsx","main/ui/common/SuperSelect/SuperSelect.tsx","main/ui/SuperComponents/SuperComponents.tsx","main/ui/LogIn/LogIn.tsx","main/ui/ResetPassword/CheckEmail.tsx","main/ui/Header/Header.tsx","main/bll/logInReducer.ts","main/bll/registrationReducer.ts","main/bll/profileReducer.ts","main/bll/error404Reducer.ts","main/bll/store.ts","main/ui/App.tsx","index.tsx","main/ui/Header/Header.module.css"],"names":["module","exports","Path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","Registration","Profile","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","classes","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","withCredentials","cardsAPI","email","message","post","password","resetPasswordToken","initState","info","setResetPasswordInfoAC","setResetPasswordErrorAC","ResetPassword","useSelector","state","resetPassword","dispatch","useDispatch","useState","setEmail","to","onSubmit","preventDefault","res","data","catch","errorMessage","response","resetPasswordTC","placeholder","style","color","fontWeight","width","borderRadius","LogIn","activeClassName","setNewPasswordInfoAC","setNewPasswordErrorAC","CreateNewPassword","createNewPassword","token","useParams","setPassword","alert","setTimeout","createNewPasswordTC","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","radio","SuperRange","onChangeRange","finalRangeClassName","range","SuperSelect","select","SuperComponents","marginLeft","CheckEmail","history","useHistory","onClick","push","Routes","exact","path","render","from","Header","nav","item","active","rootReducer","combineReducers","logIn","action","registration","profile","error404","store","createStore","applyMiddleware","thunk","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1169bb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2deUG\",\"errorInput\":\"SuperInputText_errorInput__vxdox\",\"error\":\"SuperInputText_error__2vK08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1uX3z\",\"red\":\"SuperButton_red__3-Vo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3ORNz\",\"spanClassName\":\"SuperCheckbox_spanClassName__PrEeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__XxzFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__1TPQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2ch0B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__d77wM\"};","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Error404 } from \"../Error404/Error404\";\r\nimport { Registration } from \"../Registration/Registration\";\r\nimport { Profile } from \"../Profile/Profile\";\r\nimport { ResetPassword } from \"../ResetPassword/ResetPassword\";\r\nimport { CreateNewPassword } from \"../CreateNewPassword/CreateNewPassword\";\r\nimport { SuperComponents } from \"../SuperComponents/SuperComponents\";\r\nimport { LogIn } from \"../LogIn/LogIn\";\r\nimport {CheckEmail} from \"../ResetPassword/CheckEmail\";\r\n\r\n\r\nexport enum Path {\r\n  LogIn = \"/login\",\r\n  Registration = \"/registration\",\r\n  Profile = \"/profile\",\r\n  ResetPassword = \"/resetPassword\",\r\n  CreateNewPassword = \"/set-new-password/:token\",\r\n  SuperComponents = \"/superComponents\",\r\n  Error404 = \"/404\",\r\n  CheckEmail = \"/check-email\",\r\n}\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={\"/\"} render={() => <div>Empty page</div>} />\r\n        <Route path={Path.LogIn} render={() => <LogIn />} />\r\n        <Route path={Path.Registration} render={() => <Registration />} />\r\n        <Route path={Path.Profile} render={() => <Profile />} />\r\n        <Route path={Path.ResetPassword} render={() => <ResetPassword />} />\r\n        <Route path={Path.CreateNewPassword} render={() => <CreateNewPassword />}/>\r\n        <Route path={Path.SuperComponents} render={() => <SuperComponents />} />\r\n        <Route path={Path.CheckEmail} render={() => <CheckEmail />} />\r\n        <Route path={Path.Error404} render={() => <Error404 />} />\r\n        <Redirect from={\"*\"} to={Path.Error404} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nexport const Error404 = () => {\r\n  return <div>Error 404</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Registration = () => {\r\n  return <div>Registration</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n  return <div>Profile</div>;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport classes from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && // если есть пропс onChange\r\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter && // если есть пропс onEnter\r\n      e.key === \"Enter\" && // и если нажата кнопка Enter\r\n      onEnter(); // то вызвать его\r\n  };\r\n\r\n  const finalSpanClassName = `${classes.error} ${\r\n    spanClassName ? spanClassName : \"\"\r\n  }`;\r\n  const finalInputClassName = `${\r\n    error ? classes.errorInput : classes.superInput\r\n  } ${className}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"text\"}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport classes from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${red ? classes.red : classes.default} ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    />\r\n  );\r\n};\r\n","import axios, {AxiosResponse} from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n});\r\n\r\nexport const cardsAPI = {\r\n    resetPassword(email: string, message: string) {\r\n        return instance.post<RequestResetPassType, AxiosResponse<ResponseResetPassType>>('auth/forgot',{email, message})\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n      return  instance.post<RequestNewPasswordType, AxiosResponse<ResponseResetPassType>>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n};\r\n\r\nexport type RequestResetPassType = {\r\n    email: string\r\n    //from: string\r\n    message: string\r\n};\r\n\r\nexport type ResponseResetPassType = {\r\n    info: string\r\n    //error: string\r\n};\r\n\r\nexport type RequestNewPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {cardsAPI} from \"../dal/password-api/passwordAPI\";\r\nimport {AxiosError} from \"axios\";\r\n\r\ntype InitStateType = typeof initState;\r\n\r\nconst initState = {\r\n    info: '',\r\n    error: '',\r\n};\r\n\r\n// reducer\r\nexport const resetPasswordReducer = (state = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"RESET-PASSWORD/SET-INFO\":\r\n            return {...state, info: action.info};\r\n        case \"RESET-PASSWORD/SET-ERROR\":\r\n            return {...state, error: action.error};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\ntype ActionType = ReturnType<typeof setResetPasswordInfoAC> | ReturnType<typeof setResetPasswordErrorAC>;\r\n\r\nexport const setResetPasswordInfoAC = (info: string) => ({type: 'RESET-PASSWORD/SET-INFO', info} as const);\r\n\r\nexport const setResetPasswordErrorAC = (error: string) => ({type: 'RESET-PASSWORD/SET-ERROR', error} as const);\r\n\r\n\r\n// thunk\r\nexport const resetPasswordTC = (email: string, message: string) => (dispatch: Dispatch) => {\r\n    cardsAPI.resetPassword(email, message)\r\n        .then((res) => {\r\n            dispatch(setResetPasswordInfoAC(res.data.info));\r\n        })\r\n        .catch((error: AxiosError) => {\r\n            let errorMessage = error.response?.data.error\r\n            //console.log(errorMessage);\r\n            dispatch(setResetPasswordErrorAC(errorMessage));\r\n        })\r\n};\r\n","import React, {ChangeEvent, FormEvent, useState} from \"react\";\r\nimport {SuperInputText} from \"../common/SuperInputText/SuperInputText\";\r\nimport {SuperButton} from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Path} from \"../Routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {resetPasswordTC, setResetPasswordErrorAC} from \"../../bll/resetPasswordReducer\";\r\nimport {RootStateType} from \"../../bll/store\";\r\n\r\n\r\nexport const ResetPassword = () => {\r\n\r\n    const info = useSelector<RootStateType, string>(state => state.resetPassword.info)\r\n\r\n    const error = useSelector<RootStateType, string>(state => state.resetPassword.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const message = `<div style=\"background-color: #cdfbcd; padding: 15px\">\r\n                    password recovery link: <a style=\"color: #090062; text-decoration: underline\" href='https://dzimentey.github.io/memo-cards/#/set-new-password/$token$'>\r\n                    click this link </a></div>`\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const onEmailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResetPasswordErrorAC(''))\r\n    }\r\n\r\n    const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault(); // prevent page reloading when button was pressed\r\n        dispatch(resetPasswordTC(email, message));\r\n    }\r\n\r\n    if (!!info) { // if user email has founded in database redirect to page with further instruction\r\n\r\n        return <Redirect to={'/check-email'} />\r\n\r\n    }\r\n\r\n    return <div>Reset password\r\n\r\n        <h3>It-incubator</h3>\r\n        <h2>Forgot your password?</h2>\r\n\r\n        <form onSubmit={onSubmit}>\r\n\r\n            <label>\r\n                <SuperInputText value={email} placeholder={'Email'} onChange={onEmailChange}/>\r\n                {error !== ''\r\n                    ? <div style={{color: 'red', fontWeight: 500}}>{error}</div>\r\n                    : <div>Enter your email address and we will send you further instruction</div>\r\n                }\r\n            </label>\r\n\r\n            <SuperButton type={'submit'} style={{width: '200px', borderRadius: '30px'}}\r\n            >Send instruction</SuperButton>\r\n        </form>\r\n\r\n        <p>Did you remember your password?</p>\r\n\r\n        <div>\r\n            <NavLink to = {Path.LogIn} activeClassName={''}>Try logging in</NavLink>\r\n        </div>\r\n\r\n    </div>;\r\n};\r\n","import {Dispatch} from \"redux\";\r\nimport {cardsAPI} from \"../dal/password-api/passwordAPI\";\r\nimport {AxiosError} from \"axios\";\r\n\r\ntype InitStateType = typeof initState;\r\n\r\nconst initState = {\r\n  info: '',\r\n  error: '',\r\n};\r\n\r\n// reducer\r\nexport const createNewPasswordReducer = (state = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"CREATE-NEW-PASSWORD/SET-INFO\":\r\n            return {...state, info: action.info};\r\n        case \"CREATE-NEW-PASSWORD/SET-ERROR\":\r\n            return {...state, error: action.error};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\ntype ActionType = ReturnType<typeof setNewPasswordInfoAC> | ReturnType<typeof setNewPasswordErrorAC>;\r\n\r\nexport const setNewPasswordInfoAC = (info: string) => ({type: 'CREATE-NEW-PASSWORD/SET-INFO', info} as const);\r\nexport const setNewPasswordErrorAC = (error: string) => ({type: 'CREATE-NEW-PASSWORD/SET-ERROR', error} as const);\r\n\r\n// thunk\r\nexport const createNewPasswordTC = (password: string, resetPasswordToken: string) => (dispatch: Dispatch) => {\r\n    cardsAPI.setNewPassword(password, resetPasswordToken)\r\n        .then((res) => {\r\n            dispatch(setNewPasswordInfoAC(res.data.info));\r\n        })\r\n        .catch((error: AxiosError) => {\r\n            let errorMessage = error.response?.data.error\r\n            //console.log(errorMessage);\r\n            dispatch(setNewPasswordErrorAC(errorMessage));\r\n        })\r\n};\r\n","import React, {ChangeEvent, FormEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SuperInputText} from \"../common/SuperInputText/SuperInputText\";\r\nimport {SuperButton} from \"../common/SuperButton/SuperButton\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {createNewPasswordTC, setNewPasswordErrorAC, setNewPasswordInfoAC} from \"../../bll/createNewPasswordReducer\";\r\nimport {RootStateType} from \"../../bll/store\";\r\n\r\nexport const CreateNewPassword = () => {\r\n\r\n  const info = useSelector<RootStateType, string>(state => state.createNewPassword.info)\r\n\r\n  const error = useSelector<RootStateType, string>(state => state.createNewPassword.error)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  let {token} = useParams<{token: string}>();\r\n\r\n  const [password, setPassword] = useState('')\r\n\r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value);\r\n    dispatch(setNewPasswordErrorAC(''));\r\n  }\r\n\r\n  const onSubmitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault(); // prevent page reloading when button was pressed\r\n    dispatch(createNewPasswordTC(password, token));\r\n  }\r\n\r\n  if (info !== '') {\r\n    alert(info); // show success password change message\r\n    setTimeout(() => dispatch(setNewPasswordInfoAC('')), 3000); // reset info to ''\r\n    return <Redirect to={'/login'} />\r\n  }\r\n\r\n  return <div>Create New Password Page\r\n\r\n    <h3>It-incubator</h3>\r\n    <h2>Create new password</h2>\r\n\r\n    <form onSubmit={onSubmitHandler}>\r\n\r\n      <label>\r\n        <SuperInputText value={password} placeholder={'New password'} onChange={onPasswordChange}/>\r\n        {error !== ''\r\n            ? <div style={{color: 'red', fontWeight: 500}}>{error}</div>\r\n            : <div>Enter your New Password and we will save it for you</div>\r\n        }\r\n      </label>\r\n\r\n      <SuperButton type={'submit'} style={{width: '200px', borderRadius: '30px'}}\r\n      >Create new password</SuperButton>\r\n    </form>\r\n\r\n  </div>;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport classes from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked); // works with both onChange and onChangeChecked !\r\n  };\r\n\r\n  const finalInputClassName = `${classes.checkbox} ${\r\n    className ? className : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={classes.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  );\r\n};\r\n","import React, {\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  HTMLAttributes,\r\n  useState,\r\n} from \"react\";\r\nimport classes from \"./SuperEditableSpan.module.css\";\r\nimport { SuperInputText } from \"../SuperInputText/SuperInputText\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\ntype DefaultSpanPropsType = DetailedHTMLProps<\r\n  HTMLAttributes<HTMLSpanElement>,\r\n  HTMLSpanElement\r\n>;\r\n\r\ntype SuperEditableSpanType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string; // input props\r\n\r\n  spanProps?: DefaultSpanPropsType; // span props\r\n};\r\n\r\nexport const SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\r\n  autoFocus, // игнорировать изменение этого пропса\r\n  onBlur,\r\n  onEnter,\r\n  spanProps,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { children, onDoubleClick, className, ...restSpanProps } =\r\n    spanProps || {};\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false);\r\n\r\n    onEnter && onEnter();\r\n  };\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false);\r\n\r\n    onBlur && onBlur(e);\r\n  };\r\n  const onDoubleClickCallBack = (\r\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n  ) => {\r\n    setEditMode(true);\r\n\r\n    onDoubleClick && onDoubleClick(e);\r\n  };\r\n\r\n  const spanClassName = `${classes.editableSpan} ${className}`;\r\n\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n        <SuperInputText\r\n          autoFocus\r\n          onBlur={onBlurCallback}\r\n          onEnter={onEnterCallback}\r\n          {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n        />\r\n      ) : (\r\n        <span\r\n          onDoubleClick={onDoubleClickCallBack}\r\n          className={spanClassName}\r\n          {...restSpanProps}\r\n        >\r\n          {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n          {children || restProps.value}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  InputHTMLAttributes,\r\n  DetailedHTMLProps,\r\n} from \"react\";\r\nimport classes from \"./SuperRadio.module.css\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const SuperRadio: React.FC<SuperRadioPropsType> = ({\r\n  type,\r\n  name,\r\n  options,\r\n  value,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i}>\r\n          <input\r\n            type={\"radio\"}\r\n            name={name}\r\n            checked={o === value}\r\n            value={o}\r\n            onChange={onChangeCallback}\r\n            className={classes.radio}\r\n            {...restProps}\r\n          />\r\n          {o}\r\n        </label>\r\n      ))\r\n    : [];\r\n\r\n  return <>{mappedOptions}</>;\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n} from \"react\";\r\nimport classes from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeRange?: (value: number) => void;\r\n  value: number;\r\n};\r\n\r\nexport const SuperRange: React.FC<SuperRangePropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeRange,\r\n  className,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n    onChangeRange && onChangeRange(+e.currentTarget.value);\r\n  };\r\n\r\n  const finalRangeClassName = `${classes.range} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={\"range\"}\r\n        onChange={onChangeCallback}\r\n        className={finalRangeClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, {\r\n  SelectHTMLAttributes,\r\n  DetailedHTMLProps,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport classes from \"./SuperSelect.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[];\r\n  onChangeOption?: (option: any) => void;\r\n};\r\n\r\nexport const SuperSelect: React.FC<SuperSelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const mappedOptions: any[] = options\r\n    ? options.map((o, i) => (\r\n        <option key={o + \"-\" + i} value={o}>\r\n          {o}\r\n        </option>\r\n      ))\r\n    : [];\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      onChange={onChangeCallback}\r\n      className={classes.select}\r\n      {...restProps}\r\n    >\r\n      {mappedOptions}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SuperButton } from \"../common/SuperButton/SuperButton\";\r\nimport { SuperCheckbox } from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport { SuperEditableSpan } from \"../common/SuperEditableSpan/SuperEditableSpan\";\r\nimport { SuperInputText } from \"../common/SuperInputText/SuperInputText\";\r\nimport { SuperRadio } from \"../common/SuperRadio/SuperRadio\";\r\nimport { SuperRange } from \"../common/SuperRange/SuperRange\";\r\nimport { SuperSelect } from \"../common/SuperSelect/SuperSelect\";\r\n\r\nexport const SuperComponents = () => {\r\n  return (\r\n    <div>\r\n      <div>SuperComponents</div>\r\n      <div>\r\n        <SuperInputText />\r\n        <span style={{ fontWeight: \"bold\" }}>InputText</span>\r\n      </div>\r\n      <div>\r\n        <SuperButton> x </SuperButton>\r\n        <span style={{ fontWeight: \"bold\" }}>Button</span>\r\n      </div>\r\n      <div>\r\n        <SuperCheckbox />\r\n        <span style={{ fontWeight: \"bold\" }}>Checkbox</span>\r\n      </div>\r\n      <div>\r\n        <SuperEditableSpan value={\"Enter your text here...\"} />\r\n        <span style={{ fontWeight: \"bold\" }}>EditableSpan</span>\r\n      </div>\r\n      <div>\r\n        <SuperSelect options={[\"x\", \"y\", \"z\"]} value={\"y\"} />\r\n        <span style={{ fontWeight: \"bold\" }}>Select</span>\r\n      </div>\r\n      <div>\r\n        <SuperRadio name={\"radio\"} options={[\"x\", \"y\", \"z\"]} value={\"y\"} />\r\n        <span style={{ fontWeight: \"bold\", marginLeft: \"10px\" }}>Radio</span>\r\n      </div>\r\n      <div>\r\n        <SuperRange value={50} />\r\n        <span style={{ fontWeight: \"bold\" }}>Range</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LogIn = () => {\r\n  return <div>Log in</div>;\r\n};\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {SuperButton} from \"../common/SuperButton/SuperButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {setResetPasswordInfoAC} from \"../../bll/resetPasswordReducer\";\r\n\r\nexport const CheckEmail = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const navigateTo = () => {\r\n        history.push('/');\r\n        dispatch(setResetPasswordInfoAC(''));\r\n    };\r\n\r\n    return <div>\r\n\r\n        <h3>It-incubator</h3>\r\n        <h2>Check Email</h2>\r\n        <div>\r\n            We've sent an Email width instruction to yor Email.\r\n        </div>\r\n\r\n        <SuperButton type={'submit'} style={{width: '200px', borderRadius: '30px'}} onClick={navigateTo}\r\n        >Ok</SuperButton>\r\n\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\nimport { Path } from \"../Routes/Routes\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.LogIn} activeClassName={classes.active}>\r\n          Log in\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.Registration} activeClassName={classes.active}>\r\n          Registration\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.Profile} activeClassName={classes.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.ResetPassword} activeClassName={classes.active}>\r\n          Reset password\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.CreateNewPassword} activeClassName={classes.active}>\r\n          Create new password\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to={Path.SuperComponents} activeClassName={classes.active}>\r\n          SuperComponents\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const logInReducer = (state = initState, action: any): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const registrationReducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const profileReducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};","type InitStateType = typeof initState;\r\n\r\nconst initState = {};\r\n\r\nexport const error404Reducer = (\r\n  state = initState,\r\n  action: any\r\n): InitStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { logInReducer } from \"./logInReducer\";\r\nimport { registrationReducer } from \"./registrationReducer\";\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport { resetPasswordReducer } from \"./resetPasswordReducer\";\r\nimport { createNewPasswordReducer } from \"./createNewPasswordReducer\";\r\nimport { error404Reducer } from \"./error404Reducer\";\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nconst rootReducer = combineReducers({\r\n  logIn: logInReducer,\r\n  registration: registrationReducer,\r\n  profile: profileReducer,\r\n  resetPassword: resetPasswordReducer,\r\n  createNewPassword: createNewPasswordReducer,\r\n  error404: error404Reducer,\r\n});\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Header } from \"./Header/Header\";\r\nimport { store } from \"../bll/store\";\r\nimport { Routes } from \"./Routes/Routes\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <Header />\r\n          <Routes />\r\n        </Provider>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { App } from \"./main/ui/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1Rgbw\",\"item\":\"Header_item__2CXIa\",\"active\":\"Header_active__GxMcV\"};"],"sourceRoot":""}